**The Awesome Document Factory**

WeasyPrint is a smart solution helping web developers to create PDF
documents. It turns simple HTML pages into gorgeous statistical reports,
invoices, tickets…

usage: weasyprint [-h] [-e ENCODING] [-s STYLESHEETS] [-m MEDIA_TYPE] [-u BASE_URL] [-a ATTACHMENTS]
                  [--pdf-identifier PDF_IDENTIFIER]
                  [--pdf-variant {pdf/a-1b,pdf/a-2b,pdf/a-3b,pdf/a-4b,pdf/a-2u,pdf/a-3u,pdf/a-4u,pdf/ua-1,debug}]
                  [--pdf-version PDF_VERSION] [--pdf-forms] [--uncompressed-pdf] [--custom-metadata] [-p] [--srgb]
                  [--optimize-images] [-j JPEG_QUALITY] [--full-fonts] [--hinting] [-c CACHE] [-D DPI] [-v] [-d] [-q]
                  [--version] [-i] [-t TIMEOUT]
                  input output

Render web pages to PDF.

positional arguments:

  input                 URL or filename of the HTML input,
                        or - for stdin
  output                filename where output is written,
                        or - for stdout
options:

  -h, --help            show this help message and exit
  
  -e ENCODING, --encoding ENCODING
                        force the input character encoding
                        
  -s STYLESHEETS, --stylesheet STYLESHEETS
                        URL or filename for a user CSS stylesheet
                        
  -m MEDIA_TYPE, --media-type MEDIA_TYPE
                        media type to use for @media, defaults to print
                        
  -u BASE_URL, --base-url BASE_URL
                        base for relative URLs in the HTML input,
                        defaults to the input’s own filename or URL
                        or the current directory for stdin
                     
  -a ATTACHMENTS, --attachment ATTACHMENTS
                        URL or filename of a file to attach to the
                        PDF document
                     
  --pdf-identifier PDF_IDENTIFIER
                        PDF file identifier
                     
  --pdf-variant {pdf/a-1b,pdf/a-2b,pdf/a-3b,pdf/a-4b,pdf/a-2u,pdf/a-3u,pdf/a-4u,pdf/ua-1,debug}
                        PDF variant to generate
                        i.e.: --pdf-variant=pdf/ua-1
                     
  --pdf-version PDF_VERSION
                        PDF version number
                     
  --pdf-forms           include PDF forms
  
  --uncompressed-pdf    do not compress PDF content, mainly for
                        debugging purpose
  --custom-metadata     include custom HTML meta tags in PDF metadata
  
  -p, --presentational-hints
                        follow HTML presentational hints
                        
  --srgb                include sRGB color profile
  
  --optimize-images     optimize size of embedded images with no
                        quality loss
                        
  -j JPEG_QUALITY, --jpeg-quality JPEG_QUALITY
                        JPEG quality between 0 (worst) to 95 (best)
                        
  --full-fonts          embed unmodified font files when possible
  
  --hinting             keep hinting information in embedded fonts
  
  -c CACHE, --cache-folder CACHE
                        store cache on disk instead of memory, folder
                        is created if needed and cleaned after the PDF
                        is generated
                        
  -D DPI, --dpi DPI     set maximum resolution of images embedded in
                        the PDF
                        
  -v, --verbose         show warnings and information messages
  
  -d, --debug           show debugging messages
  
  -q, --quiet           hide logging messages
  
  --version             print WeasyPrint’s version number and exit
  
  -i, --info            print system information and exit
  
  -t TIMEOUT, --timeout TIMEOUT
                        Set timeout in seconds for HTTP requests

From a technical point of view, WeasyPrint is a visual rendering engine for
HTML and CSS that can export to PDF. It aims to support web standards for
printing. WeasyPrint is free software made available under a BSD license.

It is based on various libraries but *not* on a full rendering engine like
WebKit or Gecko. The CSS layout engine is written in Python, designed for
pagination, and meant to be easy to hack on.

* Free software: BSD license
* For Python 3.9+, tested on CPython and PyPy
* Documentation: https://doc.courtbouillon.org/weasyprint
* Examples: https://weasyprint.org/#samples
* Changelog: https://github.com/Kozea/WeasyPrint/releases
* Code, issues, tests: https://github.com/Kozea/WeasyPrint
* Code of conduct: https://www.courtbouillon.org/code-of-conduct
* Professional support: https://www.courtbouillon.org
* Donation: https://opencollective.com/courtbouillon

WeasyPrint has been created and developed by Kozea (https://kozea.fr/).
Professional support, maintenance and community management is provided by
CourtBouillon (https://www.courtbouillon.org/).

Copyrights are retained by their contributors, no copyright assignment is
required to contribute to WeasyPrint. Unless explicitly stated otherwise, any
contribution intentionally submitted for inclusion is licensed under the BSD
3-clause license, without any additional terms or conditions. For full
authorship information, see the version control history.
